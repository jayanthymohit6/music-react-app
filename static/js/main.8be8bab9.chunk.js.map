{"version":3,"sources":["components/Tracks.js","components/Search.js","components/Artist.js","components/App.js","index.js"],"names":["Tracks","state","playing","audio","playingPreviewUrl","playAudio","previewUrl","Audio","_this","pause","setState","play","trackIcon","track","preview_url","react_default","a","createElement","_this2","this","tracks","props","map","id","name","album","key","onClick","className","src","images","url","alt","Component","Search","artistQuery","updateArtistQuery","event","target","value","handleKeyPress","searchArtist","onChange","onKeyPress","placeholder","Artist","_ref","artist","followers","genres","total","join","style","width","height","borderRadius","objectFit","API_ADDRESS","App","console","log","fetch","concat","then","response","json","artists","items","catch","error","alert","message","components_Search","components_Artist","components_Tracks","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8be8bab9.chunk.js","sourcesContent":["import React , { Component } from 'react';\r\n\r\nclass Tracks extends Component {\r\n    state ={playing:false,audio:null,playingPreviewUrl: null};\r\n\r\n    playAudio = previewUrl => () => {\r\n    const audio = new Audio(previewUrl);\r\n    if(!this.state.playing) {\r\n    audio.play();\r\n    this.setState({playing:true,audio, playingPreviewUrl: previewUrl});\r\n    }\r\n    else {\r\nthis.state.audio.pause();\r\nif(this.state.playingPreviewUrl === previewUrl){\r\nthis.setState({playing:false});\r\n}\r\nelse {\r\n    audio.play();\r\n    this.setState({audio,playingPreviewUrl:previewUrl})\r\n}\r\n    }\r\n    }\r\n    trackIcon =track => {\r\n        if(!track.preview_url) {\r\n            return <span>N/A</span>;\r\n        }\r\n        if(this.state.playing && this.state.playingPreviewUrl ===track.preview_url) {\r\n            return <span> | | </span>\r\n        }\r\n        return <span>&#9654;</span>;\r\n    }\r\n    render () {\r\n        const { tracks } = this.props ;\r\n        return (\r\n            <div>\r\n                {\r\n                    tracks.map(track => {\r\n                        const {id,name,album,preview_url} = track;\r\n                        return (\r\n                            <div key = {id} onClick ={this.playAudio(preview_url)} className=\"track\">\r\n                            <img src ={album.images[0].url} alt =\"track-image\" className =\"track-image\"/>\r\n                            <p className=\"track-name\">{name}</p>\r\n                            <p className=\"track-icon\">{this.trackIcon(track)}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n                }\r\n                export default Tracks;","import React, { Component } from 'react';\r\n\r\nclass Search extends Component {\r\n    state ={artistQuery:''}\r\n    updateArtistQuery =event => {\r\n        this.setState({artistQuery:event.target.value});\r\n    }\r\n    handleKeyPress =event => {\r\n        if(event.key ==='Enter') {\r\n            this.searchArtist();\r\n        }\r\n\r\n    }\r\n    searchArtist = () => {\r\n        this.props.searchArtist(this.state.artistQuery)\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <input onChange={this.updateArtistQuery} onKeyPress={this.handleKeyPress} placeholder=\"search for artist\" />\r\n                <button onClick={this.searchArtist}>Search</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Search;","import React from 'react';\r\nconst Artist = ({ artist }) => {\r\n    if (!artist) return null;\r\n    const { images, name, followers, genres } = artist;\r\n    return (\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <p>{followers.total} followers</p>\r\n            <p>{genres.join(',')}</p>\r\n            <img\r\n                src={images[0] && images[0].url}\r\n                alt=\"artist-profile\" \r\n                style ={{\r\n                    width:200,\r\n                    height:200,\r\n                    borderRadius:100,\r\n                    objectFit:'cover'\r\n                }}\r\n                />\r\n                <hr/>\r\n        </div>\r\n    )\r\n}\r\nexport default Artist;","import Tracks from './Tracks';\r\nimport Search from './Search';\r\nimport React, { Component } from 'react';\r\nimport Artist from './Artist'\r\nconst API_ADDRESS ='https://spotify-api-wrapper.appspot.com';\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {artist: null,tracks:[]};\r\n    componentDidMount() {\r\n        this.searchArtist('mj');\r\n    }\r\n   \r\n    searchArtist =artistQuery=> {\r\n        console.log('this.state',this.state)\r\n        fetch(`${API_ADDRESS}/artist/${artistQuery}`).then(response => response.json()).then(json => {\r\n            if(json.artists.total >0) {\r\n                const artist =json.artists.items[0];\r\n                this.setState({artist});\r\n                fetch(`${API_ADDRESS}/artist/${artist.id}/top-tracks`).then(response =>response.json()).then(json => this.setState({tracks:json.tracks})).catch(error =>alert(error.message));\r\n            }\r\n        }).catch(error =>alert(error.message));\r\n\r\n    }\r\n  \r\n\r\n    render() {\r\n        return (\r\n           <div>\r\n               <h2>Music Master</h2>\r\n               <Search searchArtist = {this.searchArtist}/>\r\n               <Artist artist ={this.state.artist}/>\r\n               <Tracks tracks ={this.state.tracks}/>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from'../src/components/App';\r\nimport '../src/index.css'\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}